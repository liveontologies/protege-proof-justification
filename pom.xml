<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.github.liveontologies</groupId>
	<artifactId>protege-proof-justification</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>bundle</packaging>

	<name>Protege Proof Justification</name>
	<description>
A plug-in for the [Protégé Desktop](https://protege.stanford.edu) ontology editor that provides a service for the
[Protege Justification Explanation](https://github.com/liveontologies/protege-justification-explanation) plug-in. 
This service computes justifications from proofs using the 
[Proof Utility Library PuLI](https://github.com/liveontologies/puli).
	</description>

	<url>https://github.com/liveontologies/${project.artifactId}</url>

	<scm>
		<connection>scm:git:https://github.com/liveontologies/${project.artifactId}.git</connection>
		<developerConnection>scm:git:git@github.com:liveontologies/${project.artifactId}.git</developerConnection>
		<url>https://github.com/liveontologies/${project.artifactId}</url>
		<tag>HEAD</tag>
	</scm>

	<organization>
		<name>Live Ontologies Project</name>
		<url>http://liveontologies.org</url>
	</organization>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<inceptionYear>2016</inceptionYear>

	<developers>
		<developer>
			<id>yevgeny</id>
			<name>Yevgeny Kazakov</name>
			<email>yevgeny.kazakov@uni-ulm.de</email>
			<organization>Institute of Artificial Intelligence, University of Ulm</organization>
			<organizationUrl>http://www.uni-ulm.de/en/in/ki.html</organizationUrl>
			<roles>
				<role>developer</role>
			</roles>
			<timezone>1</timezone>
		</developer>
		<developer>
			<id>saa</id>
			<name>Alexander Stupnikov</name>
			<email>saarus72@gmail.com</email>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<protege.version>5.5.0</protege.version>
		<pluginId>${project.groupId}.protege.justification.proof</pluginId>
		<extensionId>${pluginId}.service</extensionId>
		<plugin-zip.file>
			${project.artifactId}-${project.version}
		</plugin-zip.file>
		<!-- the next release version used in changes.xml -->
		<release.version>
			${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}
		</release.version>
		<!-- the path to update.properties and version-info.txt for Protege auto-update -->
		<update.url>https://raw.githubusercontent.com/liveontologies/${project.artifactId}/release</update.url>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    	<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>
	
	<dependencyManagement>
		<dependencies>
			<!-- Import versions of dependencies from Protege -->
			<dependency>
				<groupId>edu.stanford.protege</groupId>
				<artifactId>protege-parent</artifactId>
				<version>${protege.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>edu.stanford.protege</groupId>
			<artifactId>protege-common</artifactId>
			<version>${protege.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>edu.stanford.protege</groupId>
			<artifactId>protege-editor-core</artifactId>
			<version>${protege.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>edu.stanford.protege</groupId>
			<artifactId>protege-editor-owl</artifactId>
			<version>${protege.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.liveontologies</groupId>
			<artifactId>protege-justification-explanation</artifactId>
			<version>0.1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.owlapi</groupId>
			<artifactId>owlapi-osgidistribution</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.liveontologies</groupId>
			<artifactId>owlapi-proof</artifactId>
			<version>0.1.0</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<distributionManagement>
		<downloadUrl>https://github.com/liveontologies/${project.artifactId}/releases</downloadUrl>
		<snapshotRepository>
			<id>ossrh-snapshots</id>
			<url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
	
	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/liveontologies/${project.artifactId}/issues/</url>
	</issueManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.6.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-changes-plugin</artifactId>
					<version>2.12.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.12.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>3.6.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>3.4.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>3.2.4</version>
				</plugin>
				<plugin>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>3.6.3</version>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.3.1</version>
				</plugin>				
				<plugin>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.3.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>5.1.9</version>
				</plugin>				
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>3.4.0</version>
				</plugin>				
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>2.3.0</version>
				</plugin>
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>1.6.13</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<resources>
			<!-- additional resources included in jar -->
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<includes>
					<include>plugin.xml</include>
				</includes>
				<filtering>true</filtering>
			</resource>
		</resources>		
		<plugins>
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>				
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>3.5.4</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Bundle-SymbolicName>${pluginId};singleton:=true</Bundle-SymbolicName>
						<Bundle-Vendor>${project.organization.name}</Bundle-Vendor>
						<Export-Package>${extensionId}</Export-Package>
						<Update-Url>${update.url}/p5.update.properties</Update-Url>
					</instructions>
				</configuration>
				<executions>
					<execution>
						<id>bundle-manifest</id>
						<phase>install</phase>
						<goals>
							<goal>manifest</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- the plugin used to generate license headers -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<configuration>
					<verbose>false</verbose>
					<addSvnKeyWords>true</addSvnKeyWords>
					<extraExtensions>
						<g>java</g>
						<jj>java</jj>
					</extraExtensions>
				</configuration>
				<executions>
					<execution>
						<id>first</id>
						<goals>
							<goal>update-file-header</goal>
							<goal>update-project-license</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<licenseName>apache_v2</licenseName>
							<roots>
								<root>src/main/java</root>
								<root>src/test/java</root>
							</roots>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>				
				<executions>
					<execution>
						<!-- generate the modified plugin versions, such as release.version 
							used templates/*.vm and parsedVersion.osgiVersion used in src/main/update.properties -->
						<id>set-osgi-versions</id>
						<goals>
							<goal>parse-version</goal>
						</goals>
					</execution>
					<execution>
						<!-- set the current year from the build timestamp, used in README.md -->
						<id>set-current-year</id>
						<goals>
							<goal>timestamp-property</goal>
						</goals>
						<configuration>
							<name>currentYear</name>
							<pattern>yyyy</pattern>
							<locale>en,US</locale>
						</configuration>
					</execution>
					<execution>
						<!-- set the build date, used in changes.xml -->
						<id>set-build-date</id>
						<goals>
							<goal>timestamp-property</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<name>buildDate</name>
							<pattern>yyyy-MM-dd</pattern>
							<locale>en,US</locale>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- filtering and copying of additional files; these will *not* be included 
					in the jar -->
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>filter-main-resources</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>true</filtering>
									<includes>
										<include>p5.update.properties</include>
										<include>README.md</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>filter-changes-xml</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>
								<resource>
									<!-- filtering of the changes.xml file -->
									<directory>${basedir}/src/changes</directory>
									<filtering>true</filtering>
									<includes>
										<include>changes.xml</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>			
			<plugin>
				<!-- generate changelog and release announcements -->
				<artifactId>maven-changes-plugin</artifactId>
				<configuration>
					<!-- the changes filtered source changes file -->
					<xmlPath>${basedir}/target/changes.xml</xmlPath>
					<templateDirectory>templates</templateDirectory>
					<announcementDirectory>${project.build.directory}</announcementDirectory>
					<developmentTeam>${project.organization.name} team</developmentTeam>
				</configuration>
				<executions>
					<execution>
						<!-- check if the changes file is well-formed -->
						<id>check-changes</id>
						<phase>verify</phase>
						<goals>
							<goal>changes-check</goal>
						</goals>
					</execution>
					<execution>
						<!-- generate Changes.txt -->
						<id>generate-changes-file</id>
						<phase>package</phase>
						<goals>
							<goal>announcement-generate</goal>
						</goals>
						<configuration>
							<announcementFile>Changes.txt</announcementFile>
							<template>changes.vm</template>
						</configuration>
					</execution>
					<execution>
						<!-- generate version-info.txt for Protege auto-update feature -->
						<id>generate-protege-version-info</id>
						<phase>package</phase>
						<goals>
							<goal>announcement-generate</goal>
						</goals>
						<configuration>
							<announcementFile>p5.version-info.txt</announcementFile>
							<template>version-info.vm</template>
							<announcementDirectory>${basedir}</announcementDirectory>
						</configuration>
					</execution>
					<execution>
						<!-- generation of the e-mail announcement message announcement.txt -->
						<id>generate-email-announcement</id>
						<phase>package</phase>
						<goals>
							<goal>announcement-generate</goal>
						</goals>
						<configuration>
							<announcementFile>announcement.txt</announcementFile>
							<template>announcement.vm</template>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>plugin-zip</id>
						<phase>install</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<appendAssemblyId>false</appendAssemblyId>
							<descriptors>
								<descriptor>${basedir}/src/assembly/plugin-zip.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- deplyoing to maven central -->
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<!-- with this profile put META-INF/MANIFEST.MF, plugin.xml, and embed 
				dependencies so that Eclipse/PDE can find them; to use in Eclipse right click 
				on the project > Configure > Convert to Plug-in Projects... -->
			<id>eclipse</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-plugin-xml-for-eclipse</id>
								<phase>validate</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}</outputDirectory>
									<resources>
										<resource>
											<directory>src/main/resources</directory>
											<includes>
												<include>plugin.xml</include>
											</includes>
											<filtering>true</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.felix</groupId>
						<artifactId>maven-bundle-plugin</artifactId>
						<extensions>true</extensions>
						<configuration>
							<manifestLocation>META-INF</manifestLocation>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-dependencies</id>
								<phase>package</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<excludeScope>provided</excludeScope>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>release</id>
			<build>
				<plugins>					
					<plugin>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>